<node name="Directory">
  <annotation name="de.gsi.saftlib.name" value="de.gsi.saftlib"/>
  <annotation name="de.gsi.saftlib.path" value="/de/gsi/saftlib/Directory"/>
  
  <!-- de.gsi.saftlib.Directory:
       @short_description: Report instances of managed hardware
       
       This D-Bus interface is the main entry point into the saftlib. All
       device drivers register their top-level hardware objects here.
    -->
  <interface name="de.gsi.saftlib.Directory">
    
    <!-- Devices: List of all devices attached to saftd.
         The key is the name of the device as provided to AttachDevice.
         The value is the dbus path to the Device object, NOT the etherbone
         path of the device. Each object is guaranteed to implement at least
         the Device interface, however, typically the objects implement the
         TimingReceiver interface.
      -->
    <property name="Devices" type="a{ss}" access="read"/>
    
    <!-- AttachDevice: Instruct saftd to control a new device.
         @name:        The logical name for the device
         @path:        The etherbone path where the device can be found
         @result:      Object path of the created device
         
         Devices are attached to saftlib by specifying a name and a path.  The
         name should denote the logical relationship of the device to saftd. 
         For example, baseboard would be a good name for the timing receiver
         attached to an SCU.  If an exploder is being used to output events to
         an oscilloscope, a good logical name might be scope.  In these
         examples, the path for the SCU baseboard would be dev/wbm0, and the
         scope exploder would be dev/ttyUSB3 or similar.
         
         This scheme is intended to make it easy to hot-swap hardware. If the
         exploder dies, you can simply attach a new one under the same logical
         name, even though the path might be different.
      -->
    <method name="AttachDevice">
      <arg direction="in" type="s" name="name"/>
      <arg direction="in" type="s" name="path"/>
      <arg direction="out" type="s" name="result"/>
    </method>
    
    <!-- RemoveDevice: Remove the device from saftlib management.
      -->
    <method name="RemoveDevice">
      <arg direction="in" type="s" name="name"/>
    </method>
    
    <!-- Quit: Instructs the saftlib daemon to quit.
         Be absolutely certain before calling this method!
         All clients will have their future calls throw exceptions.
      -->
    <method name="Quit"/>
  </interface>
</node>
