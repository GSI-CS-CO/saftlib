<node xmlns:xi="http://www.w3.org/2001/XInclude" name="SoftwareCondition">
  <annotation name="de.gsi.saftlib.name" value="de.gsi.saftlib"/>
  
  <!-- Include base interfaces -->
  <xi:include href="Owned.xml"/>
  <xi:include href="Condition.xml"/>
  
  <!-- de.gsi.saftlib.SoftwareCondition:
       @short_description: Matched against incoming events on a SoftwareActionSink.
       
       SoftwareConditions are created by SoftwareActionSinks to select which
       events should generate callbacks. This interface always implies
       that the object also implements the general Condition interface.
    -->
  <interface name="de.gsi.saftlib.SoftwareCondition">
    <!-- Action:    Emitted whenever the condition matches a timing event.
         @event:    The event identifier that matched this rule.
         @param:    The parameter field, whose meaning depends on the event ID.
         @deadline: The scheduled execution timestamp of the action (event time + offset).
         @executed: The actual execution timestamp of the action.
         @flags:    Whether the action was (ok=0,late=1,early=2,conflict=4,delayed=8)
         
         While the underlying hardware strives to deliver the action precisely
         on the deadline, the software stack adds non-deterministic delay, so
         the deadline may be milliseconds in the past.  The late flag
         only indicates that the hardware failed to meet the required
         deadline. Similarly, the executed timestamp is the time when the
         hardware delivered the action, not when software has received it.
         
         Actions with error flags (late, early, conflict, delayed) are only
         delivered to this signal if the Condition which generated them
         specified that the respective error should be accepted.
      -->
    <signal name="Action">
      <arg name="event"    type="t"/>
      <arg name="param"    type="t"/>
      <arg name="deadline" type="t"/>
      <arg name="executed" type="t"/>
      <arg name="flags"    type="q"/>
    </signal>
    <signal name="SigAction">
      <arg name="event"    type="t"/>
      <arg name="param"    type="t"/>
      <arg name="deadline" type="T"/>
      <arg name="executed" type="T"/>
      <arg name="flags"    type="q"/>
    </signal>
  </interface>
</node>
